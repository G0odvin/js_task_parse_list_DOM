{"version":3,"sources":["scripts/main.js"],"names":["ul","document","querySelector","li","querySelectorAll","sortList","list","result","sort","a","b","dataset","salary","slice","split","join","i","append","getEmployees","map","item","name","innerText","position","age"],"mappings":";AAAA,aAyBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvBA,IAAMA,EAAKC,SAASC,cAAc,MAC5BC,EAAKF,SAASG,iBAAiB,MAE/BC,EAAW,SAACC,GACVC,IADmB,EAKTA,EAAAA,EAJD,EAAID,GAAME,KAAK,SAACC,EAAGC,GAC/BA,OAAAA,EAAEC,QAAQC,OAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAC1CN,EAAEE,QAAQC,OAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,OAHpB,IAKD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAbC,IAAAA,EAAa,EAAA,MACtBhB,EAAGiB,OAAOD,IANa,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,MAUrBE,EAAe,SAACZ,GACbA,OAAAA,EAAKa,IAAI,SAAAC,GAAS,MAAA,CACvBC,KAAMD,EAAKE,UACXC,SAAUH,EAAKT,QAAQY,SACvBX,OAAQQ,EAAKT,QAAQC,OACrBY,IAAKJ,EAAKT,QAAQa,QAItBnB,EAASF,GACTe,EAAaf","file":"main.f6397df9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst ul = document.querySelector('ul');\nconst li = document.querySelectorAll('li');\n\nconst sortList = (list) => {\n  const result = [...list].sort((a, b) =>\n    (b.dataset.salary.slice(1).split(',').join(''))\n  - (a.dataset.salary.slice(1).split(',').join('')));\n\n  for (const i of result) {\n    ul.append(i);\n  }\n};\n\nconst getEmployees = (list) => {\n  return list.map(item => ({\n    name: item.innerText,\n    position: item.dataset.position,\n    salary: item.dataset.salary,\n    age: item.dataset.age,\n  }));\n};\n\nsortList(li);\ngetEmployees(li);\n"]}